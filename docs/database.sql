-- MySQL Script generated by MySQL Workbench
-- Fri Oct 12 17:32:17 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema thoth
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema thoth
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `thoth` DEFAULT CHARACTER SET utf8 ;
USE `thoth` ;

-- -----------------------------------------------------
-- Table `thoth`.`User`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `thoth`.`User` (
  `id_user` INT NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(255) NOT NULL,
  `password` VARCHAR(255) NOT NULL,
  `name` VARCHAR(255) NOT NULL,
  `status` VARCHAR(45) NULL,
  `institution` VARCHAR(255) NULL,
  `lattes_link` VARCHAR(255) NULL,
  `created_at` DATETIME NULL,
  `updated_at` DATETIME NULL,
  PRIMARY KEY (`id_user`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `thoth`.`Access_Levels`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `thoth`.`Access_Levels` (
  `id_acess_Level` INT NOT NULL AUTO_INCREMENT,
  `description` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id_acess_Level`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `thoth`.`Rule_Selection`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `thoth`.`Rule_Selection` (
  `id_rule_selection` INT NOT NULL AUTO_INCREMENT,
  `description` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id_rule_selection`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `thoth`.`Quality_Score`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `thoth`.`Quality_Score` (
  `id_quality_score` INT NOT NULL AUTO_INCREMENT,
  `start_interval` FLOAT NOT NULL,
  `end_interval` FLOAT NOT NULL,
  `description` VARCHAR(255) NOT NULL,
  `project` INT NOT NULL,
  PRIMARY KEY (`id_quality_score`),
  INDEX `fk_Quality_Score_Project1_idx` (`project` ASC) ,
  CONSTRAINT `fk_Quality_Score_Project1`
    FOREIGN KEY (`project`)
    REFERENCES `thoth`.`Project` (`id_project`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `thoth`.`Project`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `thoth`.`Project` (
  `id_project` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(255) NOT NULL,
  `description` VARCHAR(255) NOT NULL,
  `objectives` VARCHAR(255) NOT NULL,
  `created_by` INT NOT NULL,
  `start_date` DATETIME NULL,
  `end_date` DATETIME NULL,
  `has_date` DATETIME NULL,
  `inclusion_rule` INT NOT NULL,
  `exclusion_rule` INT NOT NULL,
  `score_min` INT NOT NULL,
  `search_strategy` VARCHAR(255) NULL,
  PRIMARY KEY (`id_project`),
  INDEX `fk_Project_User_idx` (`created_by` ASC) ,
  INDEX `fk_Project_Rule_Selection1_idx` (`inclusion_rule` ASC) ,
  INDEX `fk_Project_Rule_Selection2_idx` (`exclusion_rule` ASC) ,
  INDEX `fk_Project_Quality_Score1_idx` (`score_min` ASC) ,
  CONSTRAINT `fk_Project_User`
    FOREIGN KEY (`created_by`)
    REFERENCES `thoth`.`User` (`id_user`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Project_Rule_Selection1`
    FOREIGN KEY (`inclusion_rule`)
    REFERENCES `thoth`.`Rule_Selection` (`id_rule_selection`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Project_Rule_Selection2`
    FOREIGN KEY (`exclusion_rule`)
    REFERENCES `thoth`.`Rule_Selection` (`id_rule_selection`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Project_Quality_Score1`
    FOREIGN KEY (`score_min`)
    REFERENCES `thoth`.`Quality_Score` (`id_quality_score`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `thoth`.`User_Access_Project`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `thoth`.`User_Access_Project` (
  `id_user_access_project` INT NOT NULL AUTO_INCREMENT,
  `user` INT NOT NULL,
  `project` INT NOT NULL,
  `acess_Level` INT NOT NULL,
  INDEX `fk_User_has_Project_Project1_idx` (`project` ASC) ,
  INDEX `fk_User_has_Project_User1_idx` (`user` ASC) ,
  INDEX `fk_User_has_Project_Access_Levels1_idx` (`acess_Level` ASC) ,
  PRIMARY KEY (`id_user_access_project`),
  CONSTRAINT `fk_User_has_Project_User1`
    FOREIGN KEY (`user`)
    REFERENCES `thoth`.`User` (`id_user`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_User_has_Project_Project1`
    FOREIGN KEY (`project`)
    REFERENCES `thoth`.`Project` (`id_project`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_User_has_Project_Access_Levels1`
    FOREIGN KEY (`acess_Level`)
    REFERENCES `thoth`.`Access_Levels` (`id_acess_Level`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `thoth`.`Term`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `thoth`.`Term` (
  `id_term` INT NOT NULL AUTO_INCREMENT,
  `description` VARCHAR(255) NOT NULL,
  `project` INT NOT NULL,
  PRIMARY KEY (`id_term`),
  INDEX `fk_Term_Project1_idx` (`project` ASC) ,
  CONSTRAINT `fk_Term_Project1`
    FOREIGN KEY (`project`)
    REFERENCES `thoth`.`Project` (`id_project`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `thoth`.`Synonymus`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `thoth`.`Synonymus` (
  `id_synonymus` INT NOT NULL AUTO_INCREMENT,
  `description` VARCHAR(255) NOT NULL,
  `term` INT NOT NULL,
  PRIMARY KEY (`id_synonymus`),
  INDEX `fk_Synonymus_Term1_idx` (`term` ASC) ,
  CONSTRAINT `fk_Synonymus_Term1`
    FOREIGN KEY (`term`)
    REFERENCES `thoth`.`Term` (`id_term`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `thoth`.`Status_Selection`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `thoth`.`Status_Selection` (
  `id_status_selection` INT NOT NULL AUTO_INCREMENT,
  `description` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id_status_selection`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `thoth`.`Status_Extraction`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `thoth`.`Status_Extraction` (
  `id_status_extraction` INT NOT NULL AUTO_INCREMENT,
  `description` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id_status_extraction`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `thoth`.`Question_Quality`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `thoth`.`Question_Quality` (
  `id_question_quality` INT NOT NULL AUTO_INCREMENT,
  `weigth` INT NOT NULL,
  `min_to_approve` INT NOT NULL,
  `project` INT NOT NULL,
  PRIMARY KEY (`id_question_quality`),
  INDEX `fk_Question_Quality_Score_Rule1_idx` (`min_to_approve` ASC) ,
  INDEX `fk_Question_Quality_Project1_idx` (`project` ASC) ,
  CONSTRAINT `fk_Question_Quality_Score_Rule1`
    FOREIGN KEY (`min_to_approve`)
    REFERENCES `thoth`.`Score_Rule` (`id_score_rule`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Question_Quality_Project1`
    FOREIGN KEY (`project`)
    REFERENCES `thoth`.`Project` (`id_project`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `thoth`.`Score_Rule`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `thoth`.`Score_Rule` (
  `id_score_rule` INT NOT NULL AUTO_INCREMENT,
  `score` FLOAT NOT NULL,
  `description` VARCHAR(255) NOT NULL,
  `abbreviation` VARCHAR(45) NOT NULL,
  `question_quality` INT NOT NULL,
  PRIMARY KEY (`id_score_rule`),
  INDEX `fk_Score_Rule_Question_Quality1_idx` (`question_quality` ASC) ,
  CONSTRAINT `fk_Score_Rule_Question_Quality1`
    FOREIGN KEY (`question_quality`)
    REFERENCES `thoth`.`Question_Quality` (`id_question_quality`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `thoth`.`Reading_Priority`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `thoth`.`Reading_Priority` (
  `id_reading_priority` INT NOT NULL AUTO_INCREMENT,
  `description` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id_reading_priority`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `thoth`.`Question_Extraction_Type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `thoth`.`Question_Extraction_Type` (
  `id_question_extraction_type` INT NOT NULL AUTO_INCREMENT,
  `description` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id_question_extraction_type`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `thoth`.`Question_Extraction`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `thoth`.`Question_Extraction` (
  `id_question_extraction` INT NOT NULL AUTO_INCREMENT,
  `id` VARCHAR(255) NOT NULL,
  `description` VARCHAR(255) NOT NULL,
  `question_extraction_type` INT NOT NULL,
  `project` INT NOT NULL,
  PRIMARY KEY (`id_question_extraction`),
  INDEX `fk_Question_Extraction_Question_Extraction_Type1_idx` (`question_extraction_type` ASC) ,
  INDEX `fk_Question_Extraction_Project1_idx` (`project` ASC) ,
  CONSTRAINT `fk_Question_Extraction_Question_Extraction_Type1`
    FOREIGN KEY (`question_extraction_type`)
    REFERENCES `thoth`.`Question_Extraction_Type` (`id_question_extraction_type`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Question_Extraction_Project1`
    FOREIGN KEY (`project`)
    REFERENCES `thoth`.`Project` (`id_project`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `thoth`.`Question_Extraction_Options`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `thoth`.`Question_Extraction_Options` (
  `id_question_extraction_options` INT NOT NULL AUTO_INCREMENT,
  `description` VARCHAR(255) NOT NULL,
  `question_extraction` INT NOT NULL,
  PRIMARY KEY (`id_question_extraction_options`),
  INDEX `fk_Question_Extraction_Options_Question_Extraction1_idx` (`question_extraction` ASC) ,
  CONSTRAINT `fk_Question_Extraction_Options_Question_Extraction1`
    FOREIGN KEY (`question_extraction`)
    REFERENCES `thoth`.`Question_Extraction` (`id_question_extraction`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `thoth`.`Database`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `thoth`.`Database` (
  `id_database` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `link` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id_database`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `thoth`.`Search_String`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `thoth`.`Search_String` (
  `id_search_string` INT NOT NULL AUTO_INCREMENT,
  `description` VARCHAR(255) NOT NULL,
  `updated_at` DATETIME NOT NULL,
  `database` INT NOT NULL,
  `project` INT NOT NULL,
  PRIMARY KEY (`id_search_string`),
  INDEX `fk_Search_String_Database1_idx` (`database` ASC) ,
  INDEX `fk_Search_String_Project1_idx` (`project` ASC) ,
  CONSTRAINT `fk_Search_String_Database1`
    FOREIGN KEY (`database`)
    REFERENCES `thoth`.`Database` (`id_database`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Search_String_Project1`
    FOREIGN KEY (`project`)
    REFERENCES `thoth`.`Project` (`id_project`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `thoth`.`Research_Question`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `thoth`.`Research_Question` (
  `id_research_question` INT NOT NULL AUTO_INCREMENT,
  `id` VARCHAR(255) NOT NULL,
  `description` VARCHAR(255) NOT NULL,
  `project` INT NOT NULL,
  PRIMARY KEY (`id_research_question`),
  INDEX `fk_Research_Question_Project1_idx` (`project` ASC) ,
  CONSTRAINT `fk_Research_Question_Project1`
    FOREIGN KEY (`project`)
    REFERENCES `thoth`.`Project` (`id_project`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `thoth`.`Inclusion_Criteria`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `thoth`.`Inclusion_Criteria` (
  `id_inclusion_criteria` INT NOT NULL AUTO_INCREMENT,
  `id` VARCHAR(45) NOT NULL,
  `description` VARCHAR(255) NOT NULL,
  `preselected` TINYINT NOT NULL,
  `project` INT NOT NULL,
  PRIMARY KEY (`id_inclusion_criteria`),
  INDEX `fk_Inclusion_Criteria_Project1_idx` (`project` ASC) ,
  CONSTRAINT `fk_Inclusion_Criteria_Project1`
    FOREIGN KEY (`project`)
    REFERENCES `thoth`.`Project` (`id_project`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `thoth`.`Exclusion_Criteria`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `thoth`.`Exclusion_Criteria` (
  `id_exclusion_criteria` INT NOT NULL AUTO_INCREMENT,
  `id` VARCHAR(45) NOT NULL,
  `description` VARCHAR(255) NOT NULL,
  `preselected` TINYINT NOT NULL,
  `project` INT NOT NULL,
  PRIMARY KEY (`id_exclusion_criteria`),
  INDEX `fk_Exclusion_Criteria_Project1_idx` (`project` ASC) ,
  CONSTRAINT `fk_Exclusion_Criteria_Project1`
    FOREIGN KEY (`project`)
    REFERENCES `thoth`.`Project` (`id_project`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `thoth`.`Domain`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `thoth`.`Domain` (
  `id_domain` INT NOT NULL AUTO_INCREMENT,
  `description` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id_domain`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `thoth`.`Language`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `thoth`.`Language` (
  `id_language` INT NOT NULL AUTO_INCREMENT,
  `description` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id_language`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `thoth`.`Project_Domain`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `thoth`.`Project_Domain` (
  `id_project_domain` INT NOT NULL AUTO_INCREMENT,
  `project` INT NOT NULL,
  `domain` INT NOT NULL,
  INDEX `fk_Project_has_Domain_Domain1_idx` (`domain` ASC) ,
  INDEX `fk_Project_has_Domain_Project1_idx` (`project` ASC) ,
  PRIMARY KEY (`id_project_domain`),
  CONSTRAINT `fk_Project_has_Domain_Project1`
    FOREIGN KEY (`project`)
    REFERENCES `thoth`.`Project` (`id_project`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Project_has_Domain_Domain1`
    FOREIGN KEY (`domain`)
    REFERENCES `thoth`.`Domain` (`id_domain`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `thoth`.`Project_Language`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `thoth`.`Project_Language` (
  `id_project_language` INT NULL AUTO_INCREMENT,
  `project` INT NOT NULL,
  `language` INT NOT NULL,
  INDEX `fk_Project_has_Language_Language1_idx` (`language` ASC) ,
  INDEX `fk_Project_has_Language_Project1_idx` (`project` ASC) ,
  PRIMARY KEY (`id_project_language`),
  CONSTRAINT `fk_Project_has_Language_Project1`
    FOREIGN KEY (`project`)
    REFERENCES `thoth`.`Project` (`id_project`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Project_has_Language_Language1`
    FOREIGN KEY (`language`)
    REFERENCES `thoth`.`Language` (`id_language`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `thoth`.`Study_Type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `thoth`.`Study_Type` (
  `id_study_type` INT NOT NULL AUTO_INCREMENT,
  `description` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_study_type`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `thoth`.`Project_Study_Type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `thoth`.`Project_Study_Type` (
  `id_project_study` INT NOT NULL AUTO_INCREMENT,
  `project` INT NOT NULL,
  `study_type` INT NOT NULL,
  INDEX `fk_Project_has_Study_Type_Study_Type1_idx` (`study_type` ASC) ,
  INDEX `fk_Project_has_Study_Type_Project1_idx` (`project` ASC) ,
  PRIMARY KEY (`id_project_study`),
  CONSTRAINT `fk_Project_has_Study_Type_Project1`
    FOREIGN KEY (`project`)
    REFERENCES `thoth`.`Project` (`id_project`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Project_has_Study_Type_Study_Type1`
    FOREIGN KEY (`study_type`)
    REFERENCES `thoth`.`Study_Type` (`id_study_type`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `thoth`.`Keywords`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `thoth`.`Keywords` (
  `id_keywords` INT NOT NULL AUTO_INCREMENT,
  `description` VARCHAR(255) NOT NULL,
  `project` INT NOT NULL,
  PRIMARY KEY (`id_keywords`),
  INDEX `fk_Keywords_Project1_idx` (`project` ASC) ,
  CONSTRAINT `fk_Keywords_Project1`
    FOREIGN KEY (`project`)
    REFERENCES `thoth`.`Project` (`id_project`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `thoth`.`Project_Database`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `thoth`.`Project_Database` (
  `id_project_database` INT NOT NULL AUTO_INCREMENT,
  `project` INT NOT NULL,
  `database` INT NOT NULL,
  INDEX `fk_Project_has_Database_Database1_idx` (`database` ASC) ,
  INDEX `fk_Project_has_Database_Project1_idx` (`project` ASC) ,
  PRIMARY KEY (`id_project_database`),
  CONSTRAINT `fk_Project_has_Database_Project1`
    FOREIGN KEY (`project`)
    REFERENCES `thoth`.`Project` (`id_project`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Project_has_Database_Database1`
    FOREIGN KEY (`database`)
    REFERENCES `thoth`.`Database` (`id_database`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `thoth`.`Paper`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `thoth`.`Paper` (
  `id_paper` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(255) NOT NULL,
  `author` VARCHAR(255) NOT NULL,
  `abstract` VARCHAR(255) NULL,
  `keywords` VARCHAR(255) NOT NULL,
  `document_type` VARCHAR(45) NOT NULL,
  `publication_type` VARCHAR(45) NOT NULL,
  `publisher` VARCHAR(45) NULL,
  `journal` VARCHAR(45) NULL,
  `pages` INT NOT NULL,
  `volume` INT NULL,
  `doi` VARCHAR(255) NULL,
  `url` VARCHAR(255) NULL,
  `affiliation` VARCHAR(255) NULL,
  `issn` VARCHAR(255) NULL,
  `note` VARCHAR(255) NULL,
  `bibtex_key` VARCHAR(255) NULL,
  `added_at` DATETIME NULL,
  `updated_at` DATETIME NULL,
  `status_selection` INT NULL,
  `status_extraction` INT NULL,
  `reading_priority` INT NULL,
  `added_by` INT NOT NULL,
  `updated_by` INT NOT NULL,
  `database` INT NOT NULL,
  `quality_score` INT NOT NULL,
  PRIMARY KEY (`id_paper`),
  INDEX `fk_Paper_Status_Selection1_idx` (`status_selection` ASC) ,
  INDEX `fk_Paper_Status_Extraction1_idx` (`status_extraction` ASC) ,
  INDEX `fk_Paper_Reading_Priority1_idx` (`reading_priority` ASC) ,
  INDEX `fk_Paper_User1_idx` (`added_by` ASC) ,
  INDEX `fk_Paper_Project1_idx` (`updated_by` ASC) ,
  INDEX `fk_Paper_Database1_idx` (`database` ASC) ,
  INDEX `fk_Paper_Quality_Score1_idx` (`quality_score` ASC) ,
  CONSTRAINT `fk_Paper_Status_Selection1`
    FOREIGN KEY (`status_selection`)
    REFERENCES `thoth`.`Status_Selection` (`id_status_selection`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Paper_Status_Extraction1`
    FOREIGN KEY (`status_extraction`)
    REFERENCES `thoth`.`Status_Extraction` (`id_status_extraction`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Paper_Reading_Priority1`
    FOREIGN KEY (`reading_priority`)
    REFERENCES `thoth`.`Reading_Priority` (`id_reading_priority`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Paper_User1`
    FOREIGN KEY (`added_by`)
    REFERENCES `thoth`.`User` (`id_user`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Paper_Project1`
    FOREIGN KEY (`updated_by`)
    REFERENCES `thoth`.`Project` (`id_project`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Paper_Database1`
    FOREIGN KEY (`database`)
    REFERENCES `thoth`.`Database` (`id_database`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Paper_Quality_Score1`
    FOREIGN KEY (`quality_score`)
    REFERENCES `thoth`.`Quality_Score` (`id_quality_score`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `thoth`.`Paper_Inclusion_Criteria`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `thoth`.`Paper_Inclusion_Criteria` (
  `id_paper_inclusion_creteria` INT NOT NULL AUTO_INCREMENT,
  `paper` INT NOT NULL,
  `inclusion_criteria` INT NOT NULL,
  INDEX `fk_Paper_has_Inclusion_Criteria_Inclusion_Criteria1_idx` (`inclusion_criteria` ASC) ,
  INDEX `fk_Paper_has_Inclusion_Criteria_Paper1_idx` (`paper` ASC) ,
  PRIMARY KEY (`id_paper_inclusion_creteria`),
  CONSTRAINT `fk_Paper_has_Inclusion_Criteria_Paper1`
    FOREIGN KEY (`paper`)
    REFERENCES `thoth`.`Paper` (`id_paper`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Paper_has_Inclusion_Criteria_Inclusion_Criteria1`
    FOREIGN KEY (`inclusion_criteria`)
    REFERENCES `thoth`.`Inclusion_Criteria` (`id_inclusion_criteria`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `thoth`.`Paper_Exclusion_Criteria`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `thoth`.`Paper_Exclusion_Criteria` (
  `id_paper_exclusion_criteria` INT NOT NULL AUTO_INCREMENT,
  `paper` INT NOT NULL,
  `exclusion_criteria` INT NOT NULL,
  INDEX `fk_Paper_has_Exclusion_Criteria_Exclusion_Criteria1_idx` (`exclusion_criteria` ASC) ,
  INDEX `fk_Paper_has_Exclusion_Criteria_Paper1_idx` (`paper` ASC) ,
  PRIMARY KEY (`id_paper_exclusion_criteria`),
  CONSTRAINT `fk_Paper_has_Exclusion_Criteria_Paper1`
    FOREIGN KEY (`paper`)
    REFERENCES `thoth`.`Paper` (`id_paper`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Paper_has_Exclusion_Criteria_Exclusion_Criteria1`
    FOREIGN KEY (`exclusion_criteria`)
    REFERENCES `thoth`.`Exclusion_Criteria` (`id_exclusion_criteria`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `thoth`.`Paper_Question_Extraction`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `thoth`.`Paper_Question_Extraction` (
  `id_paper_question_extraction` INT NOT NULL AUTO_INCREMENT,
  `paper` INT NOT NULL,
  `question_extraction` INT NOT NULL,
  `question_extraction_options` INT NULL,
  `answer` VARCHAR(255) NULL,
  PRIMARY KEY (`id_paper_question_extraction`),
  INDEX `fk_Paper_has_Question_Extraction_Question_Extraction1_idx` (`question_extraction` ASC) ,
  INDEX `fk_Paper_has_Question_Extraction_Paper1_idx` (`paper` ASC) ,
  INDEX `fk_Paper_has_Question_Extraction_Question_Extraction_Option_idx` (`question_extraction_options` ASC) ,
  CONSTRAINT `fk_Paper_has_Question_Extraction_Paper1`
    FOREIGN KEY (`paper`)
    REFERENCES `thoth`.`Paper` (`id_paper`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Paper_has_Question_Extraction_Question_Extraction1`
    FOREIGN KEY (`question_extraction`)
    REFERENCES `thoth`.`Question_Extraction` (`id_question_extraction`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Paper_has_Question_Extraction_Question_Extraction_Options1`
    FOREIGN KEY (`question_extraction_options`)
    REFERENCES `thoth`.`Question_Extraction_Options` (`id_question_extraction_options`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `thoth`.`Paper_Question_Quality`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `thoth`.`Paper_Question_Quality` (
  `id_paper_question_quality` INT NOT NULL AUTO_INCREMENT,
  `paper` INT NOT NULL,
  `question_quality` INT NOT NULL,
  `score_rule` INT NOT NULL,
  INDEX `fk_Paper_has_Question_Quality_Question_Quality1_idx` (`question_quality` ASC) ,
  INDEX `fk_Paper_has_Question_Quality_Paper1_idx` (`paper` ASC) ,
  PRIMARY KEY (`id_paper_question_quality`),
  INDEX `fk_Paper_Question_Quality_Score_Rule1_idx` (`score_rule` ASC) ,
  CONSTRAINT `fk_Paper_has_Question_Quality_Paper1`
    FOREIGN KEY (`paper`)
    REFERENCES `thoth`.`Paper` (`id_paper`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Paper_has_Question_Quality_Question_Quality1`
    FOREIGN KEY (`question_quality`)
    REFERENCES `thoth`.`Question_Quality` (`id_question_quality`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Paper_Question_Quality_Score_Rule1`
    FOREIGN KEY (`score_rule`)
    REFERENCES `thoth`.`Score_Rule` (`id_score_rule`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
